From b7886ffd528536c2d97f3f9ee31650c3c0ec302f Mon Sep 17 00:00:00 2001
From: ted@radicaldesigns.org <ted@radicaldesigns.org>
Date: Thu, 8 Oct 2009 17:49:56 +0000
Subject: working on quicksort

---
 public/css/main_styles.css      |    6 +-
 public/js/initializePage.js     |   20 +-
 public/js/quicksearch.js        |  367 +++++----------------------------------
 public/js/quicksilver.js        |   38 ----
 template/gtd_main_template.html |    2 +-
 view/basic/basic_table.php      |    8 +-
 6 files changed, 58 insertions(+), 383 deletions(-)
 delete mode 100644 public/js/quicksilver.js

diff --git a/public/css/main_styles.css b/public/css/main_styles.css
index 531b6d556c68ba40a11496bf0a1f21ec2d28c4c3..88f703acdc03a99e23f314cf6e12d417a1566b7c 100644
--- a/public/css/main_styles.css
+++ b/public/css/main_styles.css
@@ -172,12 +172,8 @@ font-size: 10px;
 .inline .data-cell{
 }
 /* QUICKSEARCH */
-#quicksearch{
-display: inline;
-font-size:14px;
-}
 .qs_input{
 font-size:8px;
 margin-bottom:4px;
 }
-#quicksilver{display:inline-block;}
\ No newline at end of file
+.quicksearch{display:inline-block;}
\ No newline at end of file
diff --git a/public/js/initializePage.js b/public/js/initializePage.js
index b2021a1cb6eef39dbf99a8dbf454e0d7d415285e..c571447b2eb19114e6156477ca0d1000235e1a07 100644
--- a/public/js/initializePage.js
+++ b/public/js/initializePage.js
@@ -8,15 +8,15 @@ function enableTableSort(){
 	$(".basic-table").tablesorter({widgets: ['zebra']});
 }
 function enableQuickSearch(){
-	$('.qs-input').quicksilver($('.basic-table tbody tr'));
-/*
-	$('.basic-table tbody').quicksearch({
-	  position: 'before',
-	  attached: '.basic-table',
-	  stripeRowClass: ['odd', 'even'],
-	  loaderText: 'loading',
-	  labelText: '',
-	  delay: 100
+	$('.basic-table-container').each( function() {
+		rows = $(this)
+				.children('.basic-table')
+				.children('tbody')
+				.children('tr');
+		selector = 	$(this)
+					.children('.quicksearch')
+					.children('form')
+					.children('.qs-input');
+		selector.quicksearch(rows);
 	});
-	*/
 }
\ No newline at end of file
diff --git a/public/js/quicksearch.js b/public/js/quicksearch.js
index fec69671a85f6700ef0f6632f73fda618a54e765..8d7e0797a0d3f49c156faf337078de9d34cee68f 100644
--- a/public/js/quicksearch.js
+++ b/public/js/quicksearch.js
@@ -1,328 +1,41 @@
-jQuery(function ($) {
-	$.fn.quicksearch = function (opt) {
-		
-		function is_empty(i) 
-		{
-			return (i === null || i === undefined || i === false) ? true: false;
-		}
-		
-		function strip_html(input)
-		{
-			var regexp = new RegExp(/\<[^\<]+\>/g);
-			var output = input.replace(regexp, "");
-			output = $.trim(output.toLowerCase().replace(/\n/, '').replace(/\s{2,}/, ' '));
-			return output;
-		}
-		
-		function get_key()
-		{
-			var input = strip_html($('input[rel="' + options.randomElement + '"]').val());
-			
-			if (input.indexOf(' ') === -1)
-			{
-				return input;
-			}
-			else
-			{
-				return input.split(" ");
-			}
-		}
-		
-		function test_key(k, value, type)
-		{
-			if (type === "string")
-			{
-				return test_key_string(k, value);
-			}
-			else
-			{
-				return test_key_arr(k, value);
-			}
-		}
-		
-		function test_key_string(k, value)
-		{
-			return (value.indexOf(k) > -1);
-		}
-		
-		function test_key_arr(k, value)
-		{
-			for (var i = 0; i < k.length; i++) {
-				var test = value.indexOf(k[i]);	
-				if (test === -1) {	
-					return false;
-				}
-			}			
-			return true;
-		}
-		
-		function select_element(el) 
-		{
-			if (options.hideElement === "grandparent") 
-			{
-				return $(el).parent().parent();
-			} 
-			else if (options.hideElement === "parent") 
-			{
-				return $(el).parent();
-			} 
-			else
-			{
-				return $(el);
-			}
-		}
-		
-		function stripe(el)
-		{
-			if (doStripe)
-			{
-				var i = 0;
-				select_element(el).filter(':visible').each(function () {
-					
-					for (var j = 0; j < stripeRowLength; j++)
-					{
-						if (i === j)
-						{
-							$(this).addClass(options.stripeRowClass[i]);
-							
-						}
-						else
-						{
-							$(this).removeClass(options.stripeRowClass[j]);
-						}
-					}
-					i = (i + 1) % stripeRowLength;
-				});
-			}
-		}
-		
-		function fix_widths(el)
-		{
-			$(el).find('td').each(function () {
-				$(this).attr('width', parseInt($(this).css('width')));
-			});
-		}
-		
-		function loader(o) {
-			if (options.loaderId) 
-			{
-				var l = $('input[rel="' + options.randomElement + '"]').parent().find('.loader');
-				if (o === 'hide') 
-				{
-					l.hide();
-				} 
-				else 
-				{
-					l.show();
-				}
-			}			
-		}
-		
-		function place_form() {
-			var formPosition = options.position;
-			var formAttached = options.attached;
+jQuery.fn.quicksearch = function(list){
+  list = jQuery(list);
 
-			if (formPosition === 'before') {
-				$(formAttached).before(make_form());
-			} else if (formPosition === 'prepend') {
-				$(formAttached).prepend(make_form());
-			} else if (formPosition === 'append') {
-				$(formAttached).append(make_form());
-			} else {
-				$(formAttached).after(make_form());
-			}
-		}
-				
-		function make_form_label()
-		{
-			if (!is_empty(options.labelText)) {
-				return '<label for="' + options.randomElement + '" '+
-							'class="' + options.labelClass + '">'
-							+ options.labelText
-							+ '</label> ';	
-			}
-			return '';
-		}
-		
-		function make_form_input()
-		{
-			var val = (!is_empty(options.inputText)) ? options.inputText : ""
-			return '<input type="text" value="' + val + '" rel="' + options.randomElement  + '" class="' + options.inputClass + '" id="' + options.randomElement + '" /> ';
-		}
-		
-		function make_form_loader()
-		{
-			if (!is_empty(options.loaderImg)) {
-				return '<img src="' + options.loaderImg + '" alt="Loading" id="' + options.loaderId + '" class="' + options.loaderClass + '" />';
-			} else {
-				return '<span id="' + options.loaderId + '" class="' + options.loaderClass + '">' + options.loaderText + '</span>';
-			}
-		}
-		
-		function make_form()
-		{
-			var f = (!options.isFieldset) ? 'form' : 'fieldset';
-			return '<' + f + ' action="#" ' + 'id="'+ options.formId + '" ' + 'class="quicksearch">' +
-						make_form_label() +	make_form_input() + make_form_loader() +
-					'</' + f + '>';
-		}
-			
-		function focus_on_load()
-		{
-			$('input[rel="' + options.randomElement + '"]').get(0).focus();
-		}
-		
-		function toggle_text() {
-			$('input[rel="' + options.randomElement + '"]').focus(function () {
-				if ($(this).val() === options.inputText) {
-					$(this).val('');
-				}
-			});
-			$('input[rel="' + options.randomElement + '"]').blur(function () {
-				if ($(this).val() === "") {
-					$(this).val(options.inputText);
-				}
-			});
-		}
-		
-		function get_cache(el) 
-		{
-			return $(el).map(function(){
-				return strip_html(this.innerHTML);
-			});
-		}
-		
-		function init()
-		{
-			place_form();
-			if (options.fixWidths) fix_widths(el);
-			if (options.focusOnLoad) focus_on_load();
-			if (options.inputText != "" && options.inputText != null) toggle_text();
-			
-			cache = get_cache(el);
-			
-			stripe(el);
-			loader('hide');
-		}
-		
-		function qs() 
-		{
-			clearTimeout(timeout);
-			timeout = setTimeout(function () {
-				
-				loader('show');
-				
-				setTimeout(function () {
-					options.onBefore();
-					
-					var k = get_key();
-					var k_type = (typeof k);
-					var i = 0;
-					
-					k = options.filter(k);
-					
-					if (k != "")
-					{
-						if (typeof score[k] === "undefined")
-						{
-							score[k] = new Array();
-							cache.each(function (i) {
-								if (test_key(k, cache[i], k_type))
-								{
-									score[k][i] = true;
-								}
-							});
-						}
-						
-						if (score[k].length === 0)
-						{
-							select_element(el).hide();
-						}
-						else
-						{
-							$(el).each(function (i) {
-								if (score[k][i])
-								{
-									select_element(this).show();
-								}
-								else
-								{
-									select_element(this).hide();
-								}
-							});
-							
-						}
-					}
-					else
-					{
-						select_element(el).show();
-					}
-				
-					stripe(el);
-				}, options.delay/2);
-				
-				setTimeout( function () { 
-					loader('hide');
-				}, options.delay/2);
-				
-				options.onAfter();
-				
-			}, options.delay/2);
-		}
-		
-		var options = $.extend({
-			position: 'prepend',
-			attached: 'body',
-			formId: 'quicksearch',
-			labelText: 'Quick Search',
-			labelClass: 'qs_label',
-			inputText: null,
-			inputClass: 'qs_input',
-			loaderId: 'loader',
-			loaderClass: 'loader',
-			loaderImg: null,
-			loaderText: 'Loading...',
-			stripeRowClass: null,
-			hideElement: null,
-			delay: 500,
-			focusOnLoad: false,
-			onBefore: function () { },
-			onAfter: function () { },
-			filter: function (i) { 
-				return i;
-			},
-			randomElement: 'qs' + Math.floor(Math.random() * 1000000),
-			isFieldset: false,
-			fixWidths: false
-		}, opt);
-		
-		var timeout;
-		var score = {};
-		var stripeRowLength = (!is_empty(options.stripeRowClass)) ? options.stripeRowClass.length : 0;
-		var doStripe = (stripeRowLength > 0) ? true : false;
-		var el = this;
-		var cache;
-		var selector = $(this).selector;
-		
-		$.fn.extend({
-			reset_cache: function () {
-				el = $(selector);
-				cache = get_cache(el);
-			}
-		});
-		
-		init();
-		
-		$('input[rel="' + options.randomElement + '"]').keydown(function (e) {
-			var keycode = e.keyCode;
-			if (!(keycode === 9 || keycode === 13 || keycode === 16 || keycode === 17 || keycode === 18 || keycode === 38 || keycode === 40 || keycode === 224))
-			{
-				qs();
-			}
-		});
-		
-		$('form.quicksearch, fieldset.quicksearch').submit( function () { return false; });
-		
-		return this;
-	};
-});
\ No newline at end of file
+  if ( list.length ) {
+    var rows = list.children(),
+      cache = rows.map(function(){
+        return this.innerHTML.toLowerCase();
+      });
+     
+    this
+      .keyup(filter).keyup()
+      .parents('form').submit(function(){
+        return false;
+      });
+  }
+   
+  return this;
+   
+  function filter(){
+    var term = jQuery.trim( jQuery(this).val().toLowerCase() );
+    var scores = [];
+   
+    if ( !term ) {
+      rows.show();
+    } else {
+      rows.hide();
+
+      cache.each(function(i){ // cache is all the rows of the table
+      	console.log("score = "+score);
+      	console.log("i = "+i);
+      	console.log("term = "+term);
+        var score = scores[term];
+        if (score > 0) { scores.push([score, i]); }
+      });
+
+      jQuery.each(scores.sort(function(a, b){return b[0] - a[0];}), function(){
+        jQuery(rows[ this[1] ]).show();
+      });
+    }
+  }
+};
\ No newline at end of file
diff --git a/public/js/quicksilver.js b/public/js/quicksilver.js
deleted file mode 100644
index 5f25b193f176cd602b14980acfe3b6f6dd40390b..0000000000000000000000000000000000000000
--- a/public/js/quicksilver.js
+++ /dev/null
@@ -1,38 +0,0 @@
-jQuery.fn.quicksilver = function(list){
-  list = jQuery(list);
-
-  if ( list.length ) {
-    var rows = list.children(),
-      cache = rows.map(function(){
-        return this.innerHTML.toLowerCase();
-      });
-     
-    this
-      .keyup(filter).keyup()
-      .parents('form').submit(function(){
-        return false;
-      });
-  }
-   
-  return this;
-   
-  function filter(){
-    var term = jQuery.trim( jQuery(this).val().toLowerCase() );
-    var scores = [];
-   
-    if ( !term ) {
-      rows.show();
-    } else {
-      rows.hide();
-
-      cache.each(function(i){
-        var score = scores[term];
-        if (score > 0) { scores.push([score, i]); }
-      });
-
-      jQuery.each(scores.sort(function(a, b){return b[0] - a[0];}), function(){
-        jQuery(rows[ this[1] ]).show();
-      });
-    }
-  }
-};
\ No newline at end of file
diff --git a/template/gtd_main_template.html b/template/gtd_main_template.html
index b81280adc1bec0cc5228fac21d21b41bca2bf44f..445ff05555d47cfd2e88c2b36fee922c1e840c7f 100644
--- a/template/gtd_main_template.html
+++ b/template/gtd_main_template.html
@@ -9,8 +9,8 @@
  	<script type="text/javascript" src="public/js/jquery-ui.min.js"></script>
 	<script type="text/javascript" src="public/js/tablesorter/jquery.tablesorter.min.js"></script>
  	<script type="text/javascript" src="public/js/jquery-gtd.js"></script>
+
  	<script type="text/javascript" src="public/js/quicksearch.js"></script>
- 	<script type="text/javascript" src="public/js/quicksilver.js"></script>
  	<script type="text/javascript" src="public/js/initializePage.js"></script>
     </head>
     <body>
diff --git a/view/basic/basic_table.php b/view/basic/basic_table.php
index 5b94661968c85e3d799a18c4df19898890a793ea..2c665253622803f2710c43e34d7c57aba2a6d740 100644
--- a/view/basic/basic_table.php
+++ b/view/basic/basic_table.php
@@ -16,7 +16,7 @@ function basicTable( $table, $o = array()){
     $attr = $r->attr($o);
     $html = '';
 	if( $o['title']) $html .= '<h3 class="basic-table-header">'.$o['title'].'</h3>';
-	$html .= '<div id="quicksilver"><form><input type="text" class="qs-input" name="qs-input" /></form></div>';
+	$html .= '<div class="quicksearch"><form><input type="text" class="qs-input" name="qs-input" /></form></div>';
     $html .= '<table class="basic-table tablesorter" cellspacing="0" cellpadding="0">';
 	$html .= '<thead>';
     $html .= '<tr>';
@@ -36,7 +36,11 @@ function basicTable( $table, $o = array()){
     $html .= '</tbody>';
     $html .= '</table>';
 
-    return "<div $attr >$html</div>";
+    return "<div $attr >
+				<div class='basic-table-container'>
+    				$html
+    			</div>
+    		</div>";
    
 }
 ?>
-- 
1.5.6.5

